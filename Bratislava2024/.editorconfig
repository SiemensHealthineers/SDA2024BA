# EditorConfig is awesome:http://EditorConfig.org
# From https://raw.githubusercontent.com/dotnet/roslyn/master/.editorconfig

# top-most EditorConfig file
root = true

# Don't use tabs for indentation.
[*]
charset = utf-8
indent_style = space
trim_trailing_whitespace = true
# (Please don't specify an indent_size here; that has too many unintended consequences.)

# Visual Studio Solution Files
[*.sln]
indent_style = tab

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
insert_final_newline = true
charset = utf-8-bom
# Default Severity for all .NET Code Style rules below
dotnet_analyzer_diagnostic.severity = warning

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# Xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# Yml/Yaml files
[*.{yaml,yml}]
indent_size = 2

# Powershell files
[*.ps1]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

# Shell scripts
[*.sh]
end_of_line = lf
indent_size = 2

# Batch Files
[*.{cmd,bat}]
end_of_line = crlf

# Dotnet code style settings:
[*.{cs,vb}]

# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true
# Put a blank line between System.* and Microsoft.* etc.
dotnet_separate_import_directive_groups = true

# Whether "this." and "Me." should be used if not necessary
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# Use language keywords instead of framework type names for type references (string vs System.String etc.)
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Prefer read-only on fields
dotnet_style_readonly_field = true:warning

# Remove unused parameter preferences
dotnet_code_quality_unused_parameters = all:warning

# Remove unnecessary suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none:warning

# Suggest more modern language features when available
dotnet_style_object_initializer = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_coalesce_expression = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_prefer_inferred_tuple_names = true:warning
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_diagnostic.IDE0046.severity = suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_diagnostic.IDE0045.severity = suggestion
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_compound_assignment = true:warning
dotnet_style_prefer_simplified_interpolation = true:warning
dotnet_style_prefer_simplified_boolean_expressions = true:warning
dotnet_style_namespace_match_folder = true:suggestion
dotnet_diagnostic.IDE0130.severity = suggestion
dotnet_style_operator_placement_when_wrapping = end_of_line

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Non-private readonly fields are PascalCase
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style

dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly

dotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case

# Parentheses
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning

# Accessibility modifiers
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning

# Naming Rules

# Interfaces start with an I and are PascalCased
dotnet_naming_rule.interfaces_must_be_pascal_cased_and_prefixed_with_I.symbols                        = interface_symbols
dotnet_naming_rule.interfaces_must_be_pascal_cased_and_prefixed_with_I.style                          = pascal_case_and_prefix_with_I_style
dotnet_naming_rule.interfaces_must_be_pascal_cased_and_prefixed_with_I.severity                       = warning

# External members are PascalCased
dotnet_naming_rule.externally_visible_members_must_be_pascal_cased.symbols                            = externally_visible_symbols
dotnet_naming_rule.externally_visible_members_must_be_pascal_cased.style                              = pascal_case_style
dotnet_naming_rule.externally_visible_members_must_be_pascal_cased.severity                           = warning

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity                                               = warning
dotnet_naming_rule.locals_should_be_camel_case.symbols                                                = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style                                                  = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds                                          = parameter, local

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity                                     = warning
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols                                      = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style                                        = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds                                                = local_function

dotnet_naming_style.local_function_style.capitalization                                               = pascal_case

# Constants are PascalCased
dotnet_naming_rule.constants_must_be_pascal_cased.symbols                                             = constant_symbols
dotnet_naming_rule.constants_must_be_pascal_cased.style                                               = pascal_case_style
dotnet_naming_rule.constants_must_be_pascal_cased.severity                                            = warning

# Private static fields are prefixed with s_ and are camelCased like s_myStatic
dotnet_naming_rule.private_static_fields_must_be_camel_cased_and_prefixed_with_s_underscore.symbols   = private_static_field_symbols
dotnet_naming_rule.private_static_fields_must_be_camel_cased_and_prefixed_with_s_underscore.style     = camel_case_and_prefix_with_s_underscore_style
dotnet_naming_rule.private_static_fields_must_be_camel_cased_and_prefixed_with_s_underscore.severity  = warning

# Private instance fields are camelCased with an _ like _myField
dotnet_naming_rule.private_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.symbols   = private_field_symbols
dotnet_naming_rule.private_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.style     = camel_case_and_prefix_with_underscore_style
dotnet_naming_rule.private_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.severity  = warning

# Generic Type parameters are PascalCased and prefixed with T
dotnet_naming_rule.type_parameter_rule.severity                                                       = warning
dotnet_naming_rule.type_parameter_rule.symbols                                                        = type_parameter_group
dotnet_naming_rule.type_parameter_rule.style                                                          = prefix_type_parameters_with_t_style

# All other types are PascalCased by default
dotnet_naming_rule.members_should_be_pascal_case.severity                                             = warning
dotnet_naming_rule.members_should_be_pascal_case.symbols                                              = all_members
dotnet_naming_rule.members_should_be_pascal_case.style                                                = pascal_case_style

# Symbols
dotnet_naming_symbols.externally_visible_symbols.applicable_kinds                                     = class,struct,interface,enum,property,method,field,event,delegate
dotnet_naming_symbols.externally_visible_symbols.applicable_accessibilities                           = public,internal,protected,protected_internal,private_protected

dotnet_naming_symbols.interface_symbols.applicable_kinds                                              = interface
dotnet_naming_symbols.interface_symbols.applicable_accessibilities                                    = *

dotnet_naming_symbols.constant_symbols.applicable_kinds                                               = field
dotnet_naming_symbols.constant_symbols.required_modifiers                                             = const
dotnet_naming_symbols.constant_symbols.applicable_accessibilities                                     = *

dotnet_naming_symbols.private_static_field_symbols.applicable_kinds                                   = field
dotnet_naming_symbols.private_static_field_symbols.required_modifiers                                 = static
dotnet_naming_symbols.private_static_field_symbols.applicable_accessibilities                         = private

dotnet_naming_symbols.private_field_symbols.applicable_kinds                                          = field
dotnet_naming_symbols.private_field_symbols.applicable_accessibilities                                = private

dotnet_naming_symbols.type_parameter_group.applicable_kinds                                           = type_parameter

dotnet_naming_symbols.all_members.applicable_kinds                                                    = *

# Styles
dotnet_naming_style.camel_case_style.capitalization                                                   = camel_case

dotnet_naming_style.pascal_case_style.capitalization                                                  = pascal_case

dotnet_naming_style.camel_case_and_prefix_with_s_underscore_style.required_prefix                     = s_
dotnet_naming_style.camel_case_and_prefix_with_s_underscore_style.capitalization                      = camel_case

dotnet_naming_style.camel_case_and_prefix_with_underscore_style.required_prefix                       = _
dotnet_naming_style.camel_case_and_prefix_with_underscore_style.capitalization                        = camel_case

dotnet_naming_style.pascal_case_and_prefix_with_I_style.required_prefix                               = I
dotnet_naming_style.pascal_case_and_prefix_with_I_style.capitalization                                = pascal_case

dotnet_naming_style.prefix_type_parameters_with_t_style.required_prefix                               = T
dotnet_naming_style.prefix_type_parameters_with_t_style.capitalization                                = pascal_case

# CSharp code style settings:
[*.cs]
# Modifier order
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:warning

# Code block
csharp_prefer_braces = true:warning
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false
csharp_prefer_simple_using_statement = true:warning
dotnet_diagnostic.IDE0063.severity = warning
# added by mtn according to https://github.com/dotnet/aspnetcore/issues/47912
dotnet_diagnostic.IDE0005.severity = suggestion

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
dotnet_diagnostic.IDE0007.severity = warning
csharp_style_var_elsewhere = true:silent
dotnet_diagnostic.IDE0008.severity = silent

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods = false:warning
csharp_style_expression_bodied_constructors = false:warning
csharp_style_expression_bodied_operators = false:warning
csharp_style_expression_bodied_local_functions = false:suggestion

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties = true:warning
csharp_style_expression_bodied_indexers = true:warning
csharp_style_expression_bodied_accessors = true:warning
csharp_style_expression_bodied_lambdas = true:warning

# Expression
csharp_prefer_simple_default_expression = true:warning
csharp_style_deconstructed_variable_declaration = true:warning
csharp_style_pattern_local_over_anonymous_function = true:warning
csharp_style_prefer_index_operator = true:silent
csharp_style_prefer_range_operator = true:silent
csharp_style_implicit_object_creation_when_type_is_apparent = true:warning

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_inlined_variable_declaration = true:warning
csharp_style_prefer_not_pattern = true:warning
csharp_style_prefer_pattern_matching = true:warning
csharp_style_prefer_switch_expression = true:warning

# Null checking preferences
csharp_style_throw_expression = true:warning
csharp_style_conditional_delegate_call = true:warning

csharp_style_unused_value_assignment_preference = discard_variable:silent
dotnet_diagnostic.IDE0059.severity = silent
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
dotnet_diagnostic.IDE0058.severity = silent

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Space preferences
csharp_space_after_cast = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace

# Namespace declaration preferences
dotnet_diagnostic.IDE0160.severity = none
dotnet_diagnostic.IDE0161.severity = none

# disable some rules for auto-generated code in EF projects
[**Migrations**]
dotnet_diagnostic.IDE0005.severity = none
dotnet_diagnostic.IDE0050.severity = none
dotnet_diagnostic.IDE0053.severity = none
dotnet_diagnostic.IDE0055.severity = none
dotnet_diagnostic.IDE0060.severity = none
dotnet_diagnostic.CA1825.severity = none
dotnet_diagnostic.S4581.severity = none
